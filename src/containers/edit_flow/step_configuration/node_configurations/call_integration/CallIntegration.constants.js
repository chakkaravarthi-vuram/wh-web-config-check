import { EMPTY_STRING } from '../../../../../utils/strings/CommonStrings';
import { NODE_REQUEST_FIELD_KEYS, NODE_RESPONSE_FIELD_KEYS } from '../../../node_configuration/NodeConfiguration.constants';

export const CALL_INTEGRATION_CONSTANTS = {
  HIDE_COLUMN: 'hide_column',
  SAVE_RESPONSE_INITIAL_DATA: {
    mappingInfo: EMPTY_STRING,
    mappingFieldType: EMPTY_STRING,
    value: EMPTY_STRING,
    is_deleted: false,
  },
  CHILD_ROWS: 'child_rows',
  TYPE: 'type',
  ADD_CHILD: 'add-child',
  ADD_ROW: 'Add Row',
  ADD_CHILD_ROW: 'Add Child Row',
  RETRY_OPTIONS: {
    FIRST_RETRY: 0,
    SECOND_RETRY: 1,
    THIRD_RETRY: 2,
  },
  DURATION_MINUTE_TYPE: 'minute',
  DEFAULT_STEP_STATUS: 'In Progress',
  ERROR_ACTION_CONTINUE: 1,
  ERROR_ACTION_SPLIT: 2,
  RETRY_MIN_LIMIT: 6,
  RETRY_MAX_LIMIT: 10080,
  COMMON_PICK_DATA: [
    'ID',
    'STEP_UUID',
    'FLOW_ID',
    'STEP_TYPE',
    'STEP_NAME',
    'STEP_STATUS',
    'STEP_ORDER',
    'ERROR_ACTIONS',
  ],
  FIELD_VALUE_TYPES: {
    STATIC: 'static',
    DYNAMIC: 'dynamic',
    SYSTEM: 'system',
  },
  PUBLISHED: 'published',
  ENTIRE_RESPONSE: 'entire_response',
  IS_ML_INTEGRATION: 'isMLIntegration',
};

export const CALL_INTEGRATION_INITIAL_STATE = {
  flowId: null,
  _id: null,
  stepUuid: null,
  integrationList: [],
  connectorUuid: null,
  eventUuid: null,
  relativePath: [],
  eventRelativePath: [],
  serverRelativePath: [],
  queryParams: [],
  eventQueryParams: [],
  serverQueryParams: [],
  requestBody: [],
  serverRequestBody: [],
  responseBody: [],
  isSaveResponse: false,
  responseFormat: [],
  serverResponseFormat: [],
  retryOptions: [],
  mlModelList: [],
  retryAttempts: [
    {
      duration: EMPTY_STRING,
      durationType: CALL_INTEGRATION_CONSTANTS.DURATION_MINUTE_TYPE,
    },
    {
      duration: EMPTY_STRING,
      durationType: CALL_INTEGRATION_CONSTANTS.DURATION_MINUTE_TYPE,
    },
    {
      duration: EMPTY_STRING,
      durationType: CALL_INTEGRATION_CONSTANTS.DURATION_MINUTE_TYPE,
    },
  ],
  errorActions: 1,
  stepStatus: EMPTY_STRING,
  stepName: EMPTY_STRING,
  connectedSteps: [],
};

export const REQUEST_FIELD_KEYS = {
  ...NODE_REQUEST_FIELD_KEYS,
  INTEGRATION_UUID: 'integration_uuid',
  CONNECTOR_UUID: 'connector_uuid',
  MODEL_ID: 'model_id',
  MODEL_NAME: 'model_name',
  MODEL_CODE: 'model_code',
  CONNECTOR_NAME: 'connector_name',
  EVENT_UUID: 'event_uuid',
  EVENT_NAME: 'event_name',
  EVENT_METHOD: 'method',
  END_POINT: 'end_point',
  QUERY_PARAMS: 'query_params',
  EVENT_HEADERS: 'event_headers',
  RELATIVE_PATH: 'relative_path',
  REQUEST_BODY: 'body',
  RESPONSE_BODY: 'response_body',
  RESPONSE_FORMAT: 'response_format',
  IS_MULTIPLE: 'is_multiple',
  IS_REQUIRED: 'is_required',
  KEY_NAME: 'key_name',
  KEY_UUID: 'key_uuid',
  RETRY_ATTEMPTS: 'retry_attempts',
  RETRY_DURATION: 'duration',
  RETRY_DURATION_TYPE: 'duration_type',
  IS_REQUIRED_CHECK: 'is_required_check',
  FIELD_NAME: 'field_name',
  TABLE_NAME: 'table_name',
  FIELD_UUID: 'field_uuid',
  TABLE_UUID: 'table_uuid',
  FIELD_TYPE: 'field_type',
  FIELD_LIST_TYPE: 'field_list_type',
  FIELD_LABEL: 'label',
  FIELD_REFERENCE_NAME: 'reference_name',
  PATH_NAME: 'path_name',
  MAPPING_INFO: 'mapping_info',
  COLUMN_MAPPING: 'column_mapping',
  MAPPING_FIELD_TYPE: 'mapping_field_type',
  ERROR_ACTIONS: 'error_actions',
  INTEGRATION_DETAILS: 'integration_details',
  ML_INTEGRATION_DETAILS: 'ml_integration_details',
  DATA_FIELDS: 'data_fields',
  SYSTEM_FIELDS: 'system_fields',
  FORM_FIELDS: 'form_fields',
  FIELD_DETAILS: 'field_details',
};

export const RESPONSE_FIELD_KEYS = {
  ...NODE_RESPONSE_FIELD_KEYS,
  ID: 'stepId',
  INTEGRATION_UUID: 'integrationUuid',
  CONNECTOR_UUID: 'connectorUuid',
  MODEL_ID: 'modelId',
  MODEL_NAME: 'modelName',
  MODEL_CODE: 'modelCode',
  CONNECTOR_NAME: 'connectorName',
  SELECTED_CONNECTOR: 'selectedConnector',
  SELECTED_MODEL: 'selectedModel',
  SELECTED_EVENT: 'selectedEvent',
  EVENT_UUID: 'eventUuid',
  EVENT_NAME: 'eventName',
  EVENT_METHOD: 'method',
  END_POINT: 'endPoint',
  EVENT_INTERNAL_HEADERS: 'eventInternalHeaders',
  EVENT_HEADERS: 'eventHeaders',
  EVENT_HEADERS_ERROR: 'eventHeaderErrorList',
  SERVER_EVENT_HEADERS: 'serverEventHeaders',
  EVENT_QUERY_PARAMS: 'eventQueryParams',
  QUERY_PARAMS: 'queryParams',
  QUERY_PARAMS_ERROR: 'queryParamErrorList',
  SERVER_QUERY_PARAMS: 'serverQueryParams',
  EVENT_RELATIVE_PATH: 'eventRelativePath',
  RELATIVE_PATH: 'relativePath',
  RELATIVE_PATH_ERROR: 'relativePathErrorList',
  SERVER_RELATIVE_PATH: 'serverRelativePath',
  EVENT_REQUEST_BODY: 'eventRequestBody',
  REQUEST_BODY: 'requestBody',
  REQUEST_BODY_ERROR: 'requestBodyErrorList',
  SERVER_REQUEST_BODY: 'serverRequestBody',
  RESPONSE_BODY: 'responseBody',
  IS_SAVE_RESPONSE: 'isSaveResponse',
  RESPONSE_FORMAT: 'responseFormat',
  RESPONSE_FORMAT_ERROR: 'responseFormatErrorList',
  SERVER_RESPONSE_FORMAT: 'serverResponseFormat',
  IS_MULTIPLE: 'isMultiple',
  IS_REQUIRED: 'isRequired',
  KEY_NAME: 'keyName',
  KEY_UUID: 'keyUuid',
  RETRY_ATTEMPTS: 'retryAttempts',
  RETRY_OPTIONS: 'retryOptions',
  RETRY_DURATION: 'duration',
  RETRY_DURATION_TYPE: 'durationType',
  IS_REQUIRED_CHECK: 'isRequiredCheck',
  FIELD_NAME: 'fieldName',
  TABLE_NAME: 'tableName',
  FIELD_UUID: 'fieldUuid',
  TABLE_UUID: 'tableUuid',
  FIELD_TYPE: 'fieldType',
  FIELD_LIST_TYPE: 'fieldListType',
  FIELD_LABEL: 'label',
  FIELD_REFERENCE_NAME: 'referenceName',
  PATH_NAME: 'pathName',
  MAPPING_INFO: 'mappingInfo',
  COLUMN_MAPPING: 'columnMapping',
  MAPPING_FIELD_TYPE: 'mappingFieldType',
  ERROR_ACTIONS: 'errorActions',
  INTEGRATION_DETAILS: 'integrationDetails',
  ML_INTEGRATION_DETAILS: 'mlIntegrationDetails',
  DATA_FIELDS: 'dataFields',
  SYSTEM_FIELDS: 'systemFields',
  FORM_FIELDS: 'formFields',
  FIELD_DETAILS: 'fieldDetails',
};

export const getDefaultKeyLabels = (childKey, typeKey) => {
  return {
    childKey: childKey || CALL_INTEGRATION_CONSTANTS.CHILD_ROWS,
    typeKey: typeKey || CALL_INTEGRATION_CONSTANTS.TYPE,
    addKey: CALL_INTEGRATION_CONSTANTS.ADD_CHILD,
    addRowText: CALL_INTEGRATION_CONSTANTS.ADD_ROW,
    addChildRowText: CALL_INTEGRATION_CONSTANTS.ADD_CHILD_ROW,
  };
};
